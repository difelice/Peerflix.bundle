import os
import pipes
import sys
import time
import utils

from Queue import Queue, Empty
from random import randint
from subprocess import Popen, PIPE
from threading  import Thread, Event

global processesPool
processesPool = {}

global urlsPool
urlsPool = {}

def start(magnet):
	global processesPool
	global urlsPool

	if magnet in processesPool:
		return urlsPool[magnet]

	port = randint(8000, 9000)
	host = utils.get_local_host()

	url = 'http://{0}:{1}/'.format(host, port)

	command = [
		'/usr/local/bin/peerflix',
		magnet,
		'-p', str(port),
		'-h', host
	]

	def startProcess():
		global processesPool
		global urlsPool

		try:
			Log.Debug('Starting peerflix on url {0}'.format(url))
			Log.Debug(' '.join(command))

			proc = Popen(command)

			processesPool[magnet] = proc
			urlsPool[magnet] = url

			result = proc.communicate()

			Log.Debug(repr(result[0]))
			Log.Debug(repr(result[1]))

			Log.Debug('Stopping peerflix on url {0}'.format(url))

			stop(magnet)
		except:
			Log.Exception('Could not start peerflix using port {0} on host {1}'.format(port, host))

	thread = Thread(target = startProcess)
	thread.daemon = True
	thread.start()

	time.sleep(3)

	return url

def stop(magnet):
	global processesPool
	global urlsPool

	if magnet in processesPool:
		try:
			processesPool[magnet].kill()
		except:
			Log.Exception('Could not kill process')

		del processesPool[magnet]
		del urlsPool[magnet]